{"version":3,"file":"static/js/target-price-modal.127f754b.chunk.js","mappings":"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","sources":["components/modals/IncorrectPrice/index.tsx","components/modals/targetPrice/index.tsx","globalComponents/loaders/index.tsx","utils/validations.ts"],"sourcesContent":["import { Modal } from \"react-bootstrap\";\nimport { Link } from \"globalComponents/elements\";\nimport { isNumberKey } from \"utils/helpers\";\nimport { Form, Formik } from \"formik\";\nimport { incorrectPriceSchema } from \"utils/validations\";\nimport { useAppDispatch, useAppSelector } from \"app/hooks\";\nimport { inCorrectPriceThunk } from \"features/productDetail/productThunks\";\nimport { productDetailSelector } from \"features/productDetail/productSelectors\";\nimport { ButtonLoader } from \"globalComponents/loaders\";\nimport { loggedInUserSelector } from \"features/auth/authSelectors\";\nimport { toast } from \"react-toastify\";\nimport TranslatedText from \"components/translatedText\";\nimport { useState, useEffect } from \"react\";\n\n\nconst InCorrectPrice = ({\n  show,\n  onHide,\n  product_id,\n  merchants_product\n}: {\n  show: boolean;\n  onHide: (a: any) => void;\n  product_id: number;\n  merchants_product: any\n}) => {\n  const dispatch = useAppDispatch();\n  const { targetPriceErrorMsg, targetPriceStatus, inCorrectPriceStatus, inCorrectPriceErrorMsg } = useAppSelector(\n    productDetailSelector\n  );\n  const loggedInUser = useAppSelector(loggedInUserSelector);\n\n  const handleClose = () => {\n    onHide(true)\n    setErrorMsg(\"\")\n  };\n  const [errorMsg, setErrorMsg] = useState<String>(\"\");\n  return (\n    <Modal show={show} onHide={handleClose} id=\"pricemodal\">\n      <Modal.Header closeButton>\n        <h4 className=\"modal-title\">\n          <TranslatedText text=\"product.reportIncorrectPrice\" />\n        </h4>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          <TranslatedText text=\"product.incorrectPriceNotification\" />\n        </p>\n        <Formik\n          initialValues={{\n            price: '',\n            product_id: product_id,\n            merchant_id: merchants_product.length > 0 ? merchants_product[0].merchant_id : merchants_product\n          }}\n          validationSchema={incorrectPriceSchema}\n          onSubmit={async (values, { resetForm }) => {\n            if (loggedInUser && loggedInUser.token) {\n              const res = await dispatch(\n                inCorrectPriceThunk({\n                  body: {\n                    reported_price: values.price ? Number(values.price) : 0,\n                    merchant_id: Number(values.merchant_id),\n                    product_id: values.product_id\n                  },\n                })\n              );\n              // console.log(\"res res res ####################\",res);\n              // console.log(\"inCorrectPriceStatus @@@@@@@@@@@@@@@\", inCorrectPriceStatus);\n              // console.log(\"inCorrectPriceErrorMsg ####################\",inCorrectPriceErrorMsg);\n              if(inCorrectPriceStatus == 'failed') {\n                setErrorMsg(inCorrectPriceErrorMsg)\n              }\n              if (res.payload.status_code === 200) {\n                toast.success(res.payload.message);\n                resetForm();\n                handleClose();\n              }\n              if(res.payload.status_code == 400) {\n                setErrorMsg(res.payload.message)\n              }\n            }\n          }}\n        >\n          {({ touched, errors, values, handleChange, handleSubmit }) => (\n            <Form>\n              <div className=\"pricerange\">\n                <div className=\"price-inputs\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Insert Correct Price Here\"\n                    name=\"price\"\n                    onChange={handleChange}\n                    onKeyDown={(e) => { isNumberKey(e); setErrorMsg(\"\") }}\n                    className={\n                      errors.price && touched.price ? \"input-error-border\" : \"\"\n                    }\n                    style={{ width: \"100%\" }}\n                  />\n                </div>\n                {errors && (\n                  <span className=\"input-error-msg\">\n                    {errors.price || errors.price || errorMsg}\n                  </span>\n                )}\n                <div className=\"addalert-button\">\n                  <Link\n                    onClick={(e) => {\n                      e.preventDefault();\n                      handleSubmit();\n                    }}\n                    href=\"add-alert\"\n                  >\n                    {inCorrectPriceStatus === \"loading\" ? (\n                      <ButtonLoader show={inCorrectPriceStatus === \"loading\"} />\n                    ) : (\n                      \"Report\"\n                    )}\n                  </Link>\n                </div>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default InCorrectPrice;\n","import { Modal } from \"react-bootstrap\";\nimport { Link } from \"globalComponents/elements\";\nimport { isNumberKey } from \"utils/helpers\";\nimport { Form, Formik } from \"formik\";\nimport { targetPriceSchema } from \"utils/validations\";\nimport { useAppDispatch, useAppSelector } from \"app/hooks\";\nimport { targetPriceThunk } from \"features/productDetail/productThunks\";\nimport { productDetailSelector } from \"features/productDetail/productSelectors\";\nimport { ButtonLoader } from \"globalComponents/loaders\";\nimport { loggedInUserSelector } from \"features/auth/authSelectors\";\nimport { toast } from \"react-toastify\";\nimport TranslatedText from \"components/translatedText\";\n\nconst TargetPrice = ({\n  show,\n  onHide,\n  productId,\n}: {\n  show: boolean;\n  onHide: (a: any) => void;\n  productId: number;\n}) => {\n  const dispatch = useAppDispatch();\n  const { targetPriceErrorMsg, targetPriceStatus } = useAppSelector(\n    productDetailSelector\n  );\n  const loggedInUser = useAppSelector(loggedInUserSelector);\n\n  const handleClose = () => onHide(true);\n\n  return (\n    <Modal show={show} onHide={handleClose} id=\"pricemodal\">\n      <Modal.Header closeButton>\n        <h4 className=\"modal-title\">\n          <TranslatedText text=\"product.addTargetPrice\" />\n        </h4>\n      </Modal.Header>\n      <Modal.Body>\n        <p>\n          <TranslatedText text=\"product.addYourTargetPriceForNotification\" />\n        </p>\n        <Formik\n          initialValues={{\n            min: \"0\",\n            max: \"\",\n          }}\n          validationSchema={targetPriceSchema}\n          onSubmit={async (values, { resetForm }) => {\n            if (loggedInUser && loggedInUser.token) {\n              const res = await dispatch(\n                targetPriceThunk({\n                  body: {\n                    target_price_min: values.min ? Number(values.min) : 0,\n                    target_price_max: Number(values.max),\n                    product_id: productId,\n                  },\n                })\n              );\n\n              if (res.payload.status_code === 200) {\n                toast.success(res.payload.message);\n                resetForm();\n                handleClose();\n              }\n            }\n          }}\n        >\n          {({ touched, errors, values, handleChange, handleSubmit }) => (\n            <Form>\n              <div className=\"pricerange\">\n                <h3>\n                  <TranslatedText text=\"product.priceRange\" />\n                </h3>\n                <div className=\"price-inputs\">\n                  <input\n                    type=\"text\"\n                    placeholder=\"Min\"\n                    name=\"min\"\n                    value=\"\"\n                    onChange={handleChange}\n                    onKeyDown={(e) => isNumberKey(e)}\n                    className={\n                      errors.min && touched.min ? \"input-error-border\" : \"\"\n                    }\n                  />\n                  <span>-</span>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Max\"\n                    name=\"max\"\n                    value={values.max}\n                    onChange={handleChange}\n                    onKeyDown={(e) => isNumberKey(e)}\n                    className={\n                      errors.max && touched.max ? \"input-error-border\" : \"\"\n                    }\n                  />\n                </div>\n                {errors && (\n                  <span className=\"input-error-msg\">\n                    {errors.min || errors.max || targetPriceErrorMsg}\n                  </span>\n                )}\n                <div className=\"addalert-button\">\n                  <Link\n                    onClick={(e) => {\n                      e.preventDefault();\n                      handleSubmit();\n                    }}\n                    href=\"add-alert\"\n                  >\n                    {targetPriceStatus === \"loading\" ? (\n                      <ButtonLoader show={targetPriceStatus === \"loading\"} />\n                    ) : (\n                      \"Add Alert\"\n                    )}\n                  </Link>\n                </div>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default TargetPrice;\n","import { BeatLoader } from \"react-spinners\";\nimport { css } from \"@emotion/react\";\n\nconst override = css`\n  margin-left: 5px;\n  margin-top: 9px;\n`;\n\ninterface ButtonLoaderProps {\n  show: boolean;\n  color?: string;\n  size?: number;\n}\n\nexport const ButtonLoader = ({ show, color, size }: ButtonLoaderProps) => {\n  return (\n    <BeatLoader\n      size={size ? size : 10}\n      color={color ? color : \"#fff\"}\n      loading={show}\n      css={override}\n    />\n  );\n};\n\nexport const FullPageLoader = () => {\n  return (\n    <div className=\"full-page-loader\">\n      <BeatLoader size=\"20px\" color=\"#6b4eaf\" />\n    </div>\n  );\n};\n","import { object, SchemaOf, string, ref, number } from 'yup';\nimport moment from 'moment';\n\ninterface loginSchemaInterface {\n  email: string;\n  password: string;\n}\n\ninterface forgotPasswordInterface {\n  email: string;\n}\n\ninterface registerSchemaInterface {\n  email: string;\n  password: string;\n  username: string;\n  confirm_password: string;\n}\ninterface resetPasswordInterface {\n  email: string;\n  password: string;\n  password_confirmation: string;\n}\n\ninterface editProfileInterface {\n  username: string | undefined;\n  date_of_birth: string | undefined;\n  gender: string | undefined;\n}\n\nexport interface addAddressInterface {\n  full_name: string | undefined;\n  phone: string | undefined;\n  address_province: string | undefined,\n  address_city: string | undefined,\n  address_zip_code: string | undefined,\n  address: string | undefined,\n  // default_shipping: number | undefined,\n  // default_billing: number | undefined\n}\n\nexport interface targetPriceInterface {\n  min: string | undefined,\n  max: string | undefined\n}\nexport interface incorrectPriceInterface {\n  price: string | undefined\n}\n\nexport const loginValidationSchema: SchemaOf<loginSchemaInterface> = object({\n  email: string().required(\"Email is required\").email(\"Enter valid email\"),\n  password: string().required(\"Password is required\"),\n});\n\nexport const registerValidationSchema: SchemaOf<registerSchemaInterface> = object({\n  email: string().trim().required(\"Email is required\").email(\"Enter valid email\"),\n  username: string().trim().max(15, \"Username should not be longer than 15 characters\").required(\"Name is required\"),\n  password: string().trim().min(8, \"Password must be at least 8 characters\").max(20, \"Password should not be longer than 20 characters\").required(\"Password is required\"),\n  confirm_password: string().trim().required(\"Confirm Password is required\").oneOf([ref('password'), null], 'Passwords must match')\n});\n\nexport const forgotPasswordValidationSchema: SchemaOf<forgotPasswordInterface> = object({\n  email: string().trim().required(\"Email is required.\").email(\"Enter valid email.\"),\n});\n\nexport const resetPasswordSchema: SchemaOf<resetPasswordInterface> = object({\n  email: string().trim().required(\"Email is required\").email(\"Enter valid email\"),\n  password: string().trim().required(\"Password is required\"),\n  password_confirmation: string().trim().oneOf([ref('password'), null], 'Passwords must match').required(\"Re enter your password\")\n});\n\nexport const editProfileSchema: SchemaOf<editProfileInterface> = object({\n  username: string().trim().min(3, 'Username must be at least 3 characters').required('Username is required'),\n  date_of_birth: string()\n    .test(\n      \"date_of_birth\",\n      \"Invalid date of birth\",\n      value => {\n        return moment().diff(moment(value), 'days') >= 1;\n      }\n    ),\n  gender: string().trim().required('Select gender').oneOf(['male', 'female'], 'Select gender'),\n  phone: string().trim().required(\"Phone is required\"),\n  country_code: string().trim().required(\"Country code is required\")\n});\n\nexport const addAddressSchema: SchemaOf<addAddressInterface> = object({\n  full_name: string().trim().min(3, 'Full Name must be at least 3 characters').max(15, 'Full Name should not be larger than 15 characters long').required('Full Name is required'),\n  // phone: string().trim().min(6, \"Phone should be atleast 6 characters long\").max(25, \"Phone should not be larger than 25 characters long\").required('Phone is required'),\n  address_province: string().trim().min(3, 'Province must be at least 3 characters').max(50, 'Address province should not be larger than 50 characters long').required('Province is required'),\n  address_city: string().trim().min(3, 'City must be at least 3 characters').max(50, 'Address city should not be larger than 50 characters long').required('City is required'),\n  address_zip_code: string().trim().min(5, 'Zip Code must be at least 5 characters').max(10, 'Address zip code should not be larger than 10 characters long').required('Zip Code is required'),\n  address: string().trim().min(4, 'Address must be at least 4 characters').max(50, 'Address should not be larger than 50 characters long').required('Address is required'),\n  phone: string().trim().required(\"Phone is required\"),\n  country_code: string().trim().required(\"Country code is required\")\n  // default_shipping: number().oneOf([0, 1]),\n  // default_billing: number().oneOf([0, 1]),\n});\n\nexport const targetPriceSchema: SchemaOf<targetPriceInterface> = object({\n  min: string().trim(),\n  max: string().trim().required('Maximum price is required'),\n}) \nexport const incorrectPriceSchema: SchemaOf<incorrectPriceInterface> = object({\n  price: string().trim().required(\"Report price is required\"),\n}) \n"],"names":["show","onHide","product_id","merchants_product","dispatch","useAppDispatch","useAppSelector","productDetailSelector","inCorrectPriceStatus","targetPriceErrorMsg","targetPriceStatus","inCorrectPriceErrorMsg","loggedInUser","loggedInUserSelector","handleClose","setErrorMsg","useState","errorMsg","id","closeButton","className","text","initialValues","price","merchant_id","length","validationSchema","incorrectPriceSchema","onSubmit","values","resetForm","token","inCorrectPriceThunk","body","reported_price","Number","res","payload","status_code","toast","message","touched","errors","handleChange","handleSubmit","type","placeholder","name","onChange","onKeyDown","e","isNumberKey","style","width","onClick","preventDefault","href","productId","min","max","targetPriceSchema","targetPriceThunk","target_price_min","target_price_max","value","override","css","ButtonLoader","color","size","BeatLoader","loading","FullPageLoader","loginValidationSchema","object","email","string","required","password","registerValidationSchema","trim","username","confirm_password","oneOf","ref","forgotPasswordValidationSchema","resetPasswordSchema","password_confirmation","editProfileSchema","date_of_birth","test","moment","diff","gender","phone","country_code","addAddressSchema","full_name","address_province","address_city","address_zip_code","address"],"sourceRoot":""}